# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: lorisleiva/laravel-docker:8.1

variables:
  MYSQL_DATABASE: siscop
  MYSQL_ROOT_PASSWORD: secret
  DB_HOST: mysql
  DB_USERNAME: root
  DB_DATABASE: siscop
  APP_ENV: local
  APP_URL: "http://127.0.0.1:8000"
  APP_DEBUG: "false"
  SESSION_DRIVER: database
  QUEUE_CONNECTION: database
  MAIL_DRIVER: log
  DEPLOYER_HOST: siscop.com.br

stages:
  - build
  - test
  - deploy
  - release
  - performance

composer:
  stage: build

  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate

  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/

phpunit:
  stage: test

  services:
    - mysql:5.7

  needs:
    - composer

  script:
    - vendor/bin/phpunit --coverage-text --colors=never

  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - storage/logs

codestyle:
  stage: test
  dependencies: []
  script:
    - phpcs --standard=PSR2 --extensions=php app -n --ignore=Database/* -n

phpstan:
  stage: test
  dependencies:
    - composer
  script:
    - vendor/bin/phpstan analyse --memory-limit 8G

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

homologacao:
  stage: deploy
  image: registry.gitlab.com/siscop/core/siscop-api-laravel/deployer
  variables:
    DEPLOYER_AMBIENTE: homologacao
  script:
    - *init_ssh
    - /root/.composer/vendor/bin/dep deploy homologacao -vv --tag="$CI_COMMIT_TAG"
  environment:
    name: homologacao
    url: https://www.homologacao.siscop.com.br
  needs:
    - phpstan
    - codestyle
    - phpunit
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-hom\b/'

release_homologacao:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-hom\b/'
  script:
    - echo 'Executando release $CI_COMMIT_TAG de Homologação'
  needs:
    - homologacao
  environment:
    name: homologacao
    url: https://app.homologacao.siscop.com.br
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'

performance_homologacao:
  image:
    name: loadimpact/k6:latest
    entrypoint: [ '' ]
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-hom\b/'
  stage: performance
  needs:
    - release_homologacao
  variables:
    SISCOP_HOSTNAME: api.homologacao.siscop.com.br
  script:
    - echo "executing homologacao k6 in k6 container..."
    - k6 run ./loadtests/performance-test.js

producao:
  stage: deploy
  image: registry.gitlab.com/siscop/core/siscop-api-laravel/deployer
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-prod\b/'
  variables:
    DEPLOYER_AMBIENTE: producao
  script:
    - *init_ssh
    - /root/.composer/vendor/bin/dep deploy producao -vv --tag="$CI_COMMIT_TAG"
  needs:
    - phpstan
    - codestyle
    - phpunit
  environment:
    name: producao
    url: https://www.siscop.com.br

release_gl_producao:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-prod\b/'
  script:
    - echo 'Executando release $CI_COMMIT_TAG de Produção'
  needs:
    - producao
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'

release_sentry_producao:
  stage: release
  image: registry.gitlab.com/siscop/core/siscop-api-laravel/sentry
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\bapi-prod\b/'
  variables:
    VERSION: $CI_COMMIT_TAG
  script:
    - echo 'Executando release $CI_COMMIT_TAG de Produção'
    - sentry-cli releases new -p $STR_PROJECT_NAME $VERSION
    - sentry-cli releases set-commits --auto $VERSION
    - sentry-cli releases deploys $VERSION new -e $CI_ENVIRONMENT_NAME
  needs:
    - producao
  environment:
    name: producao
    url: https://app.siscop.com.br
